--Aanan Rahman 8390154 
--Mariam Mowazi 8609856

--a)

SELECT NAME, TYPE, URL, FIRST_OPEN_DATE, MANAGER_NAME, PHONE_NUMBER, STREET_ADDRESS, HOUR_OPEN, HOUR_CLOSE 
FROM RESTAURANT 
FULL OUTER JOIN LOCATIONS ON RESTAURANT.RESTAURANTID = LOCATIONS.RESTAURANTID
ORDER BY NAME

-- b)

SELECT M_NAME, MENUITEM.TYPE, CATEGORY, DESCRIPTION, PRICE, RESTAURANT.NAME 
FROM MENUITEM FULL OUTER JOIN RESTAURANT ON MENUITEM.RESTAURANTID = RESTAURANT.RESTAURANTID
ORDER BY RESTAURANT.NAME

-- c) Have to change the WHERE to accept user inputed stuff 

SELECT MANAGER_NAME, FIRST_OPEN_DATE
FROM LOCATIONS 
	FULL OUTER JOIN RESTAURANT ON LOCATIONS.RESTAURANTID = RESTAURANT.RESTAURANTID
WHERE RESTAURANT.TYPE= 'Fast food'

-- d) need to make it take the restaurant name instead of ipho 

Select DISTINCT RESTAURANT.NAME, M.NAME, M.PRICE, LOCATIONS.MANAGER_NAME, LOCATIONS.HOUR_OPEN, RESTAURANT.URL 
		FROM "Project".RESTAURANT, "Project".LOCATIONS, "Project".MENUITEM M WHERE
		M.PRICE >= ALL (SELECT M1.PRICE 
						FROM "Project".MENUITEM M1 
						WHERE M1.RESTAURANTID = RESTAURANT.RESTAURANTID) 
						AND RESTAURANT.RESTAURANTID = LOCATIONS.RESTAURANTID AND M.RESTAURANTID = RESTAURANT.RESTAURANTID;

		-- or this option for d
		SELECT MENUITEM.NAME, PRICE, URL, HOUR_OPEN, MANAGER_NAME
		FROM "Project".MENUITEM 
		FULL OUTER JOIN "Project".RESTAURANT ON MENUITEM.RESTAURANTID = RESTAURANT.RESTAURANTID
		FULL OUTER JOIN "Project".LOCATIONS ON MENUITEM.RESTAURANTID = LOCATIONS.RESTAURANTID
		WHERE MENUITEM.PRICE > ANY (SELECT MENUITEM.PRICE
								FROM "Project".MENUITEM
								WHERE RESTAURANT.NAME = 'IPho' )
		ORDER BY MENUITEM.PRICE DESC
		LIMIT 1


-- e)

SELECT RESTAURANT.TYPE, MENUITEM.CATEGORY, AVG(MENUITEM.PRICE) 
FROM "Project".MENUITEM 
FULL OUTER JOIN "Project".RESTAURANT ON MENUITEM.RESTAURANTID = RESTAURANT.RESTAURANTID
GROUP BY MENUITEM.CATEGORY, RESTAURANT.TYPE
ORDER BY RESTAURANT.TYPE

-- f)

SELECT RESTAURANT.NAME, COUNT(*), RATER.NAME, RATING.FOOD, RATING.MOOD, RATING.PRICE, RATING.STAFF
FROM "Project".RESTAURANT 
FULL OUTER JOIN "Project".RATING ON RATING.RESTAURANTID = RESTAURANT.RESTAURANTID
FULL OUTER JOIN "Project".RATER ON RATER.USERID = RATING.USERID
GROUP BY RESTAURANT.NAME, RATER.NAME, RATING.FOOD, RATING.MOOD, RATING.PRICE, RATING.STAFF
ORDER BY RESTAURANT.NAME

-- this just gets the total number of ratings, not sure if you need it or not
SELECT RESTAURANT.NAME, COUNT(*)
FROM "Project".RESTAURANT 
FULL OUTER JOIN "Project".RATING ON RATING.RESTAURANTID = RESTAURANT.RESTAURANTID
FULL OUTER JOIN "Project".RATER ON RATER.USERID = RATING.USERID
GROUP BY RESTAURANT.NAME
ORDER BY RESTAURANT.NAME

-- g) 

SELECT RESTAURANT.NAME, LOCATIONS.PHONE_NUMBER, RESTAURANT.TYPE
FROM "Project".RESTAURANT FULL OUTER JOIN "Project".LOCATIONS ON RESTAURANT.RESTAURANTID = LOCATIONS.RESTAURANTID
FULL OUTER JOIN "Project".RATING ON RATING.RESTAURANTID = RESTAURANT.RESTAURANTID
WHERE RATING.DATE = (SELECT MAX(RATING.DATE) FROM "Project".RATING 
			  WHERE RATING.DATE < '2015/01/01')

-- h) 

SELECT RESTAURANT.NAME,  LOCATIONS.FIRST_OPEN_DATE 
FROM "Project".RESTAURANT, "Project".LOCATIONS
WHERE RESTAURANT.RESTAURANTID IN (SELECT RATING.RESTAURANTID
								FROM "Project".RATING 
								WHERE RATING.STAFF < ANY (SELECT RATING.STAFF
														FROM "Project".RATING 
														WHERE RATING.USERID = '09'
								ORDER BY RATING.DATE ASC)) AND RESTAURANT.RESTAURANTID = LOCATIONS.RESTAURANTID

-- i)

SELECT RESTAURANT.NAME, RATER.NAME
FROM "Project".RESTAURANT 
FULL OUTER JOIN "Project".RATING ON RATING.RESTAURANTID = RESTAURANT.RESTAURANTID
FULL OUTER JOIN "Project".RATER ON RATER.USERID = RATING.USERID
WHERE RATING.FOOD >= ALL (SELECT MAX(RATING.FOOD) 
						FROM "Project".RATING) AND RESTAURANT.TYPE = 'Fast food'
GROUP BY RESTAURANT.NAME, RATER.NAME
LIMIT 5


-- j) gives a list of types in order of most popular to least popular 

SELECT RESTAURANT.TYPE, AVG(RATING.FOOD)
FROM "Project".RESTAURANT 
FULL OUTER JOIN "Project".RATING ON RATING.RESTAURANTID = RESTAURANT.RESTAURANTID
WHERE RATING.MOOD >= ALL (SELECT MAX(RATING.FOOD) 
						FROM "Project".RATING) 
GROUP BY RESTAURANT.TYPE
ORDER BY AVG(RATING.FOOD) DESC

-- k)

SELECT RATER.NAME, RATER.JOIN_DATE, RATER.REPUTATION, RATING.DATE, RESTAURANT.NAME 
FROM "Project".RESTAURANT 
FULL OUTER JOIN "Project".RATING ON RATING.RESTAURANTID = RESTAURANT.RESTAURANTID
FULL OUTER JOIN "Project".RATER ON RATER.USERID = RATING.USERID
WHERE (RATING.FOOD+RATING.MOOD) >= ALL (SELECT MAX(RATING.FOOD+RATING.MOOD) 
						FROM "Project".RATING) 
GROUP BY RATING.DATE, RATER.JOIN_DATE, RATER.NAME, RATER.REPUTATION, RESTAURANT.NAME
LIMIT 4

-- l)

SELECT RATER.NAME, RATER.REPUTATION, RESTAURANT.NAME, RATING.DATE 
FROM "Project".RESTAURANT 
FULL OUTER JOIN "Project".RATING ON RATING.RESTAURANTID = RESTAURANT.RESTAURANTID
FULL OUTER JOIN "Project".RATER ON RATER.USERID = RATING.USERID
WHERE (RATING.FOOD) >= ALL (SELECT MAX(RATING.FOOD) 
						FROM "Project".RATING) 
OR (RATING.MOOD) >= ALL (SELECT MAX(RATING.MOOD) 
						FROM "Project".RATING) 
GROUP BY RATING.FOOD, RATING.DATE, RATER.JOIN_DATE, RATER.NAME, RATER.REPUTATION, RESTAURANT.NAME
ORDER BY RATING.FOOD
LIMIT 4

-- m) ipho should be the entered restaurant name

SELECT RATER.NAME, RATER.REPUTATION, RATING.COMMENTS, MENUITEM.NAME, MENUITEM.PRICE 
FROM "Project".RESTAURANT 
FULL OUTER JOIN "Project".RATING ON RATING.RESTAURANTID = RESTAURANT.RESTAURANTID
FULL OUTER JOIN "Project".RATER ON RATER.USERID = RATING.USERID
FULL OUTER JOIN "Project".MENUITEM ON MENUITEM.RESTAURANTID = RESTAURANT.RESTAURANTID
WHERE (SELECT COUNT(*) FROM "Project".RATING) >= ALL (SELECT COUNT(*) FROM "Project".RATING) 
AND RESTAURANT.NAME = 'IPho'
GROUP BY RATER.NAME, RATER.REPUTATION, RATING.COMMENTS, MENUITEM.NAME, MENUITEM.PRICE 

-- n) 
SELECT RATER.NAME, RATER.EMAIL 
FROM "Project".RATER 
WHERE RATER.USERID IN (SELECT RATING.USERID
					FROM "Project".RATING
					WHERE (RATING.PRICE + RATING.MOOD + RATING.FOOD + RATING.STAFF) < ANY 
					(SELECT (R.PRICE + R.MOOD + R.FOOD + R.STAFF)
					FROM "Project".RATING R 
					WHERE R.USERID IN (SELECT RATER.USERID 
									FROM "Project".RATER 
									WHERE RATER.NAME = 'John')))


-- o) 

SELECT RATER.name, RATER.type, RATER.email
FROM "Project".RATER
WHERE RATER.USERID IN (SELECT R1.USERID 
					FROM "Project".RATER R1
					GROUP BY R1.USERID 
					HAVING (SELECT MAX(stddev) 
							FROM (SELECT stddev(R2.MOOD + R2.STAFF + R2.PRICE + R2.FOOD) as stddev 
								FROM "Project".RATING R2
								WHERE R2.userId = R1.userId 
								GROUP BY R2.RESTAURANTID) as ANYTHING) >= ALL((SELECT MAX(stddev) 
																				FROM (SELECT stddev(R3.MOOD + R3.STAFF + R3.PRICE + R3.FOOD) 
																					FROM "Project".Rating R3 
																					GROUP BY R3.userId, R3.restaurantId) as ANYTHING2)))
			
